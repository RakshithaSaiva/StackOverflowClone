{"ast":null,"code":"import axios from 'axios';\nvar API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nexport var logIn = function logIn(authData) {\n  return API.post('/user/login', authData);\n};\nexport var signUp = function signUp(authData) {\n  return API.post('/user/signup', authData);\n};\nexport var postQuestion = function postQuestion(questionData) {\n  return API.post('/questions/Ask', questionData);\n};\nexport var GetAllQuestions = function GetAllQuestions() {\n  return API.get('/questions/get');\n};\nexport var deleteQuestion = function deleteQuestion(id) {\n  return API.delete(\"/questions/delete/\".concat(id));\n};\nexport var postAnswer = function postAnswer(id, noOfAnswers, answerBody, userAnswered, userId) {\n  return API.patch(\"/answer/post/\".concat(id), {\n    noOfAnswers: noOfAnswers,\n    answerBody: answerBody,\n    userAnswered: userAnswered,\n    userId: userId\n  });\n};\nexport var deleteAnswer = function deleteAnswer(id, answerId, noOfAnswers) {\n  return API.patch(\"/answer/delete/\".concat(id), {\n    answerId: answerId,\n    noOfAnswers: noOfAnswers\n  });\n};","map":{"version":3,"names":["axios","API","create","baseURL","logIn","authData","post","signUp","postQuestion","questionData","GetAllQuestions","get","deleteQuestion","id","delete","concat","postAnswer","noOfAnswers","answerBody","userAnswered","userId","patch","deleteAnswer","answerId"],"sources":["C:/Users/Lenovo/Desktop/learning/Projects/React/Stackoverflow-clone/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API= axios.create({baseURL: 'http://localhost:5000'})\r\n\r\n\r\nexport const logIn= (authData)=> API.post('/user/login', authData);\r\nexport const signUp= (authData)=> API.post('/user/signup', authData);\r\n\r\nexport const postQuestion = (questionData) => API.post('/questions/Ask', questionData) \r\nexport const GetAllQuestions=() =>API.get('/questions/get');\r\nexport const deleteQuestion= (id) =>API.delete(`/questions/delete/${id}`)\r\n\r\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered,userId) => API.patch(`/answer/post/${id}`,{noOfAnswers, answerBody, userAnswered,userId})\r\nexport const deleteAnswer = (id,answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`,{answerId, noOfAnswers})"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,GAAG,GAAED,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAG3D,OAAO,IAAMC,KAAK,GAAE,SAAPA,KAAKA,CAAGC,QAAQ;EAAA,OAAIJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AAAA;AAClE,OAAO,IAAME,MAAM,GAAE,SAARA,MAAMA,CAAGF,QAAQ;EAAA,OAAIJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;AAAA;AAEpE,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAIC,YAAY;EAAA,OAAKR,GAAG,CAACK,IAAI,CAAC,gBAAgB,EAAEG,YAAY,CAAC;AAAA;AACtF,OAAO,IAAMC,eAAe,GAAC,SAAhBA,eAAeA,CAAA;EAAA,OAAMT,GAAG,CAACU,GAAG,CAAC,gBAAgB,CAAC;AAAA;AAC3D,OAAO,IAAMC,cAAc,GAAE,SAAhBA,cAAcA,CAAGC,EAAE;EAAA,OAAIZ,GAAG,CAACa,MAAM,sBAAAC,MAAA,CAAsBF,EAAE,CAAE,CAAC;AAAA;AAEzE,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIH,EAAE,EAAEI,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAACC,MAAM;EAAA,OAAKnB,GAAG,CAACoB,KAAK,iBAAAN,MAAA,CAAiBF,EAAE,GAAG;IAACI,WAAW,EAAXA,WAAW;IAAEC,UAAU,EAAVA,UAAU;IAAEC,YAAY,EAAZA,YAAY;IAACC,MAAM,EAANA;EAAM,CAAC,CAAC;AAAA;AAC9J,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIT,EAAE,EAACU,QAAQ,EAAEN,WAAW;EAAA,OAAKhB,GAAG,CAACoB,KAAK,mBAAAN,MAAA,CAAmBF,EAAE,GAAG;IAACU,QAAQ,EAARA,QAAQ;IAAEN,WAAW,EAAXA;EAAW,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module"}